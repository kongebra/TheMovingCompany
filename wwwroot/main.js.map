{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/customer/all-customers/all-customers.component.html","webpack:///./src/app/customer/all-customers/all-customers.component.scss","webpack:///./src/app/customer/all-customers/all-customers.component.ts","webpack:///./src/app/customer/customer.service.ts","webpack:///./src/app/customer/customer.ts","webpack:///./src/app/customer/delete-customer/delete-customer.component.html","webpack:///./src/app/customer/delete-customer/delete-customer.component.scss","webpack:///./src/app/customer/delete-customer/delete-customer.component.ts","webpack:///./src/app/customer/new-customer/new-customer.component.html","webpack:///./src/app/customer/new-customer/new-customer.component.scss","webpack:///./src/app/customer/new-customer/new-customer.component.ts","webpack:///./src/app/customer/single-customer/single-customer.component.html","webpack:///./src/app/customer/single-customer/single-customer.component.scss","webpack:///./src/app/customer/single-customer/single-customer.component.ts","webpack:///./src/app/customer/update-customer/update-customer.component.html","webpack:///./src/app/customer/update-customer/update-customer.component.scss","webpack:///./src/app/customer/update-customer/update-customer.component.ts","webpack:///./src/app/order/all-orders/all-orders.component.html","webpack:///./src/app/order/all-orders/all-orders.component.scss","webpack:///./src/app/order/all-orders/all-orders.component.ts","webpack:///./src/app/order/delete-order/delete-order.component.html","webpack:///./src/app/order/delete-order/delete-order.component.scss","webpack:///./src/app/order/delete-order/delete-order.component.ts","webpack:///./src/app/order/enum-to-array.pipe.ts","webpack:///./src/app/order/eservice.enum.ts","webpack:///./src/app/order/new-order/new-order.component.html","webpack:///./src/app/order/new-order/new-order.component.scss","webpack:///./src/app/order/new-order/new-order.component.ts","webpack:///./src/app/order/order.service.ts","webpack:///./src/app/order/order.ts","webpack:///./src/app/order/single-order/single-order.component.html","webpack:///./src/app/order/single-order/single-order.component.scss","webpack:///./src/app/order/single-order/single-order.component.ts","webpack:///./src/app/order/update-order/update-order.component.html","webpack:///./src/app/order/update-order/update-order.component.scss","webpack:///./src/app/order/update-order/update-order.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AllOrdersComponent } from './order/all-orders/all-orders.component';\nimport { NewOrderComponent } from './order/new-order/new-order.component';\nimport { AllCustomersComponent } from './customer/all-customers/all-customers.component';\nimport { SingleOrderComponent } from './order/single-order/single-order.component';\nimport { NewCustomerComponent } from './customer/new-customer/new-customer.component';\nimport { SingleCustomerComponent } from './customer/single-customer/single-customer.component';\nimport { DeleteOrderComponent } from './order/delete-order/delete-order.component';\nimport { UpdateOrderComponent } from './order/update-order/update-order.component';\nimport { UpdateCustomerComponent } from './customer/update-customer/update-customer.component';\nimport { DeleteCustomerComponent } from './customer/delete-customer/delete-customer.component';\n\nconst routes: Routes = [\n\t{ path: '', redirectTo: '/orders', pathMatch: 'full' },\n\n\t{ path: 'orders', component: AllOrdersComponent },\n\t{ path: 'orders/new', component: NewOrderComponent },\n\t{ path: 'orders/view/:id', component: SingleOrderComponent },\n\t{ path: 'orders/update/:id', component: UpdateOrderComponent },\n\t{ path: 'orders/delete/:id', component: DeleteOrderComponent },\n\n\t{ path: 'customers', component: AllCustomersComponent },\n\t{ path: 'customers/new', component: NewCustomerComponent },\n\t{ path: 'customers/view/:id', component: SingleCustomerComponent\t},\n\t{ path: 'customers/update/:id', component: UpdateCustomerComponent },\n\t{ path: 'customers/delete/:id', component: DeleteCustomerComponent },\n];\n\n@NgModule({\n\timports: [RouterModule.forRoot(routes)],\n\texports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<div class=\\\"container-fluid pt-3\\\">\\n\\t<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark mb-3\\\">\\n\\t\\t<a class=\\\"navbar-brand\\\" [routerLink]=\\\"[ '/' ]\\\">The Moving Company</a>\\n\\t\\t<button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbar\\\" aria-controls=\\\"navbar\\\">\\n\\t\\t\\t<span class=\\\"navbar-toggler-icon\\\"></span>\\n\\t\\t</button>\\n\\n\\t\\t<div class=\\\"collapse navbar-collapse\\\" id=\\\"navbar\\\">\\n\\t\\t\\t<ul class=\\\"navbar-nav ml-auto\\\">\\n\\t\\t\\t\\t<li class=\\\"nav-item\\\">\\n\\t\\t\\t\\t\\t<a class=\\\"nav-link\\\" [routerLink]=\\\"[ '/orders' ]\\\" routerLinkActive=\\\"active\\\">Orders</a>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t<li class=\\\"nav-item\\\">\\n\\t\\t\\t\\t\\t<a class=\\\"nav-link\\\" [routerLink]=\\\"[ '/customers' ]\\\" routerLinkActive=\\\"active\\\">Customers</a>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t</ul>\\n\\t\\t</div>\\n\\t</nav>\\n\\n\\t<router-outlet></router-outlet>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent {\n\t\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { EnumToArrayPipe } from './order/enum-to-array.pipe';\nimport { AllCustomersComponent } from './customer/all-customers/all-customers.component';\nimport { AllOrdersComponent } from './order/all-orders/all-orders.component';\nimport { SingleOrderComponent } from './order/single-order/single-order.component';\nimport { NewOrderComponent } from './order/new-order/new-order.component';\nimport { UpdateOrderComponent } from './order/update-order/update-order.component';\nimport { SingleCustomerComponent } from './customer/single-customer/single-customer.component';\nimport { NewCustomerComponent } from './customer/new-customer/new-customer.component';\nimport { UpdateCustomerComponent } from './customer/update-customer/update-customer.component';\nimport { DeleteCustomerComponent } from './customer/delete-customer/delete-customer.component';\nimport { DeleteOrderComponent } from './order/delete-order/delete-order.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EnumToArrayPipe,\n    AllCustomersComponent,\n    AllOrdersComponent,\n    SingleOrderComponent,\n    NewOrderComponent,\n    UpdateOrderComponent,\n    SingleCustomerComponent,\n    NewCustomerComponent,\n    UpdateCustomerComponent,\n    DeleteCustomerComponent,\n    DeleteOrderComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<h1 class=\\\"display-4\\\">Customers</h1>\\n\\n<hr>\\n\\n<a class=\\\"btn btn-success mb-3\\\" [routerLink]=\\\"[ '/customers/new' ]\\\">Create new Customer</a>\\n\\n<table class=\\\"table table-striped table-responsive-md\\\">\\n    <thead>\\n      <tr>\\n        <th>ID</th>\\n        <th>Name</th>\\n        <th>Email</th>\\n        <th>Phone</th>\\n        <th>Orders</th>\\n        <th>Actions</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let customer of customers\\\">\\n        <td>{{customer.id}}</td>\\n        <td>{{customer.name}}</td>\\n        <td><a href=\\\"mailto:{{customer.email}}\\\">{{customer.email}}</a></td>\\n        <td><a href=\\\"tel:{{customer.phone}}\\\">{{customer.phone}}</a></td>\\n        <td>{{customer.orders?.length || '0'}}</td>\\n        <td>\\n          <div class=\\\"btn-group btn-group-sm\\\">\\n              <a class=\\\"btn btn-info\\\" [routerLink]=\\\"[ '/customers/view/', customer.id ]\\\">Details</a>\\n              <a class=\\\"btn btn-warning\\\" [routerLink]=\\\"[ '/customers/update/', customer.id ]\\\">Update</a>\\n              <a class=\\\"btn btn-danger\\\" [routerLink]=\\\"[ '/customers/delete/', customer.id ]\\\">Delete</a>\\n          </div>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVyL2FsbC1jdXN0b21lcnMvYWxsLWN1c3RvbWVycy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { CustomerService } from '../customer.service';\nimport { Customer } from '../customer';\nimport { OrderService } from 'src/app/order/order.service';\nimport { Order } from 'src/app/order/order';\n\n@Component({\n\tselector: 'app-all-customers',\n\ttemplateUrl: './all-customers.component.html',\n\tstyleUrls: ['./all-customers.component.scss']\n})\nexport class AllCustomersComponent implements OnInit {\n\tconstructor(\n\t\tprivate customerService: CustomerService,\n\t\tprivate orderService: OrderService,\n\t) { }\n\n\tcustomers: Customer[] = [];\n\n\tngOnInit() {\n\t\tthis.getCustomers();\n\t\tthis.getOrders();\n\t}\n\n\tgetCustomers() {\n\t\tthis.customerService.getCustomers().subscribe(customers => this.customers = customers);\n\t}\n\n\tgetOrders() {\n\t\tlet orders: Order[];\n\n\t\tthis.orderService.getOrders()\n\t\t\t.subscribe(o => orders = o, err => console.error(err), () => {\n\t\t\tthis.customers.forEach(customer => {\n\t\t\t\tcustomer.orders = orders.filter(e => {\n\t\t\t\t\treturn e.customerId == customer.id;\n\t\t\t\t})\n\t\t\t});\n\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Customer } from './customer';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class CustomerService {\n    // TODO (Svein): Edit this to /api/customers before production\n    url = 'https://localhost:5001/api/customers';\n\n    constructor(private http: HttpClient) { }\n\n    getCustomers(): Observable<Customer[]> {\n        return this.http.get<Customer[]>(this.url);\n    }\n\n    getCustomer(id): Observable<Customer> {\n        return this.http.get<Customer>(this.url + `/${id}`);\n    }\n\n    postCustomer(customer: Customer): Observable<any> {\n        return this.http.post(this.url, customer);\n    }\n\n    putCustomer(id, customer: Customer): Observable<any> {\n        return this.http.put(this.url + `/${id}`, customer);\n    }\n\n    deleteCustomer(id): Observable<any> {\n        return this.http.delete(this.url + `/${id}`);\n    }\n}\n","import { Order } from '../order/order';\n\nexport class Customer {\n    id: number\n    name: string\n    email: string\n    phone: string\n    orders: Order[]\n}\n","module.exports = \"\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVyL2RlbGV0ZS1jdXN0b21lci9kZWxldGUtY3VzdG9tZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { CustomerService } from '../customer.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-delete-customer',\n  templateUrl: './delete-customer.component.html',\n  styleUrls: ['./delete-customer.component.scss']\n})\nexport class DeleteCustomerComponent implements OnInit {\n  constructor(\n    private customerService: CustomerService,\n    private router: Router,\n    private route: ActivatedRoute,\n  ) { }\n\n  ngOnInit() {\n    let id = this.route.snapshot.params.id;\n    this.deleteCustomer(id);\n  }\n\n  deleteCustomer(id) {\n    this.customerService.deleteCustomer(id)\n      .subscribe(() => {}, err => console.error(err), () => {\n        this.router.navigate(['/customers'])\n    })\n  }\n\n}\n","module.exports = \"<h1 class=\\\"display-4\\\">New Customer</h1>\\n\\n<hr>\\n\\n<a class=\\\"btn btn-outline-dark mb-3\\\" [routerLink]=\\\"[ '/customers' ]\\\">See all Customers</a>\\n\\n<form id=\\\"postForm\\\" name=\\\"postForm\\\" #heroForm=\\\"ngForm\\\" (ngSubmit)=\\\"postCustomer()\\\">\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"name\\\">Name</label>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"customer.name\\\" name=\\\"name\\\" id=\\\"name\\\" class=\\\"form-control\\\" required>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"email\\\">Email</label>\\n        <input type=\\\"email\\\" [(ngModel)]=\\\"customer.email\\\" name=\\\"email\\\" id=\\\"email\\\" class=\\\"form-control\\\" required>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"phone\\\">Phone</label>\\n        <input type=\\\"tel\\\" [(ngModel)]=\\\"customer.phone\\\" name=\\\"phone\\\" id=\\\"phone\\\" class=\\\"form-control\\\" required>\\n    </div>\\n\\n    <input type=\\\"submit\\\" class=\\\"btn btn-success btn-block btn-lg\\\">\\n</form>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVyL25ldy1jdXN0b21lci9uZXctY3VzdG9tZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { CustomerService } from '../customer.service';\nimport { Router } from '@angular/router';\nimport { Customer } from '../customer';\n\n@Component({\n\tselector: 'app-new-customer',\n\ttemplateUrl: './new-customer.component.html',\n\tstyleUrls: ['./new-customer.component.scss']\n})\nexport class NewCustomerComponent implements OnInit {\n\tconstructor(\n\t\tprivate customerService: CustomerService,\n\t\tprivate router: Router,\n\t) { }\n\n\tcustomer: Customer;\n\n\tngOnInit() {\n\t\tthis.customer = new Customer();\n\t}\n\n\tpostCustomer() {\n\t\tthis.customerService.postCustomer(this.customer)\n\t\t\t.subscribe(() => { }, err => console.error(err), () => {\n\t\t\tthis.router.navigate(['/customers']);\n\t\t});\n\t}\n\n}\n","module.exports = \"<h1 class=\\\"display-4\\\">Customer Details</h1>\\n\\n<hr>\\n\\n<a class=\\\"btn btn-outline-dark mb-3\\\" [routerLink]=\\\"[ '/customers' ]\\\">See all Customers</a>\\n\\n<table class=\\\"table table-striped\\\">\\n    <thead>\\n        <tr>\\n            <th>Key</th>\\n            <th>Value</th>\\n        </tr>\\n    </thead>\\n    <tbody>\\n        <tr>\\n            <td>ID</td>\\n            <td>{{customer.id}}</td>\\n        </tr>\\n        <tr>\\n            <td>Name</td>\\n            <td>{{customer.name}}</td>\\n        </tr>\\n        <tr>\\n            <td>Email</td>\\n            <td><a href=\\\"mailto:{{customer.email}}\\\">{{customer.email}}</a></td>\\n        </tr>\\n        <tr>\\n            <td>Phone</td>\\n            <td><a href=\\\"tel:{{customer.phone}}\\\">{{customer.phone}}</a></td>\\n        </tr>\\n    </tbody>\\n</table>\\n\\n<a class=\\\"btn btn-warning btn-block\\\" [routerLink]=\\\"[ '/customers/update/', customer.id ]\\\">Update Customer Details</a>\\n\\n<hr>\\n\\n<h2 class=\\\"mb-3\\\">Orders by {{customer.name}} ({{customer.orders?.length || '0'}})</h2>\\n\\n<table class=\\\"table table-striped table-responsive-md\\\">\\n    <thead>\\n        <tr>\\n            <th>ID</th>\\n            <th>Service</th>\\n            <th>Created</th>\\n            <th>Due Date</th>\\n            <th>Address (From)</th>\\n            <th>Address (To)</th>\\n            <th>Note</th>\\n        </tr>\\n    </thead>\\n    <tbody>\\n        <tr *ngFor=\\\"let order of customer.orders\\\">\\n            <td>{{order.id}}</td>\\n            <td>{{order.service}}</td>\\n            <td>{{order.created}}</td>\\n            <td>{{order.dueDate}}</td>\\n            <td>{{order.addressFrom}}</td>\\n            <td>{{order.addressTo}}</td>\\n            <td>{{order.note}}</td>\\n        </tr>\\n    </tbody>\\n</table>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVyL3NpbmdsZS1jdXN0b21lci9zaW5nbGUtY3VzdG9tZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { CustomerService } from '../customer.service';\nimport { OrderService } from 'src/app/order/order.service';\nimport { Customer } from '../customer';\nimport { ActivatedRoute } from '@angular/router';\nimport { Order } from 'src/app/order/order';\n\n@Component({\n\tselector: 'app-single-customer',\n\ttemplateUrl: './single-customer.component.html',\n\tstyleUrls: ['./single-customer.component.scss']\n})\nexport class SingleCustomerComponent implements OnInit {\n\tconstructor(\n\t\tprivate customerService: CustomerService,\n\t\tprivate orderService: OrderService,\n\t\tprivate route: ActivatedRoute,\n\t) {}\n\t\n\tcustomer: Customer;\n\n\tngOnInit() {\n\t\tlet id = this.route.snapshot.params.id\n\t\tthis.getCustomer(id);\n\t}\n\n\tgetCustomer(id) {\n\t\tthis.customerService.getCustomer(id)\n\t\t\t.subscribe(customer => this.customer = customer, err => console.error(err), () => {\n\t\t\tthis.getOrders();\n\t\t});\n\t}\n\n\tgetOrders() {\n\t\tlet orders: Order[];\n\t\tthis.orderService.getOrders()\n\t\t\t.subscribe(o => orders = o, err => console.error(err), () => {\n\t\t\tthis.customer.orders = orders.filter(e => {\n\t\t\t\treturn e.customerId == this.customer.id;\n\t\t\t});\n\t\t});\n\t}\n\n}\n","module.exports = \"<h1 class=\\\"display-4\\\">Update Customer</h1>\\n\\n<hr>\\n\\n<a class=\\\"btn btn-outline-dark mb-3\\\" [routerLink]=\\\"[ '/customers' ]\\\">See all Customers</a>\\n\\n\\n<form id=\\\"putForm\\\" name=\\\"putForm\\\" #heroForm=\\\"ngForm\\\" (ngSubmit)=\\\"putCustomer()\\\">\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"name\\\">Name</label>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"customer.name\\\" name=\\\"name\\\" id=\\\"name\\\" class=\\\"form-control\\\" [value]=\\\"customer.name\\\" required>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"email\\\">Email</label>\\n        <input type=\\\"email\\\" [(ngModel)]=\\\"customer.email\\\" name=\\\"email\\\" id=\\\"email\\\" class=\\\"form-control\\\" [value]=\\\"customer.email\\\" required>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"phone\\\">Phone</label>\\n        <input type=\\\"tel\\\" [(ngModel)]=\\\"customer.phone\\\" name=\\\"phone\\\" id=\\\"phone\\\" class=\\\"form-control\\\" [value]=\\\"customer.phone\\\" required>\\n    </div>\\n\\n    <input type=\\\"submit\\\" class=\\\"btn btn-success btn-block btn-lg\\\" value=\\\"Update\\\">\\n</form>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVyL3VwZGF0ZS1jdXN0b21lci91cGRhdGUtY3VzdG9tZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { CustomerService } from '../customer.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Customer } from '../customer';\n\n@Component({\n\tselector: 'app-update-customer',\n\ttemplateUrl: './update-customer.component.html',\n\tstyleUrls: ['./update-customer.component.scss']\n})\nexport class UpdateCustomerComponent implements OnInit {\n\tconstructor(\n\t\tprivate customerService: CustomerService,\n\t\tprivate route: ActivatedRoute,\n\t\tprivate router: Router\n\t) { }\n\n\tid: string;\n\tcustomer: Customer;\n\n\tngOnInit() {\n\t\tthis.id = this.route.snapshot.params.id\n\t\tthis.getCustomer(this.id);\n\t}\n\n\tgetCustomer(id) {\n\t\tthis.customerService.getCustomer(id)\n\t\t\t.subscribe(customer => this.customer = customer, err => console.error(err), () => {\n\n\t\t});\n\t}\n\n\tputCustomer() {\n\t\tthis.customerService.putCustomer(this.id, this.customer)\n\t\t\t.subscribe(() => {}, err => console.error(err), () => {\n\t\t\tthis.router.navigate(['/customers']);\n\t\t});\n\t}\n\n}\n","module.exports = \"<h1 class=\\\"display-4\\\">Orders</h1>\\n\\n<hr>\\n\\n<a class=\\\"btn btn-success mb-3\\\" [routerLink]=\\\"[ '/orders/new' ]\\\">Create new Order</a>\\n\\n<table class=\\\"table table-striped table-responsive-md\\\">\\n    <thead>\\n\\t\\t<tr>\\n\\t\\t\\t<th>ID</th>\\n\\t\\t\\t<th>Service</th>\\n\\t\\t\\t<th>Due Date</th>\\n\\t\\t\\t<th>Customer</th>\\n\\t\\t\\t<th>Note</th>\\n\\t\\t\\t<th>Actions</th>\\n\\t\\t</tr>\\n    </thead>\\n    <tbody>\\n\\t\\t<tr *ngFor=\\\"let order of orders\\\">\\n\\t\\t\\t<td>{{order.id}}</td>\\n\\t\\t\\t<td>{{order.service}}</td>\\n\\t\\t\\t<td>{{order.dueDate}}</td>\\n        \\t<td>\\n          \\t\\t<a [routerLink]=\\\"[ '/customers/view/', order.customer.id ]\\\">{{order.customer.name}}</a>\\n        \\t</td>\\n        \\t<td>{{order.note}}</td>\\n        \\t<td>\\n\\t\\t\\t\\t<div class=\\\"btn-group btn-group-sm\\\">\\n\\t\\t\\t\\t\\t<a class=\\\"btn btn-info\\\" [routerLink]=\\\"[ '/orders/view/', order.id ]\\\">Details</a>\\n\\t\\t\\t\\t\\t<a class=\\\"btn btn-warning\\\" [routerLink]=\\\"[ '/orders/update/', order.id ]\\\">Update</a>\\n\\t\\t\\t\\t\\t<a class=\\\"btn btn-danger\\\" [routerLink]=\\\"[ '/orders/delete/', order.id ]\\\">Delete</a>\\n\\t\\t\\t\\t</div>\\n    \\t\\t</td>\\n    \\t</tr>\\n    </tbody>\\n</table>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZGVyL2FsbC1vcmRlcnMvYWxsLW9yZGVycy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { OrderService } from '../order.service';\nimport { Order } from '../order';\nimport { CustomerService } from 'src/app/customer/customer.service';\n\n@Component({\n  selector: 'app-all-orders',\n  templateUrl: './all-orders.component.html',\n  styleUrls: ['./all-orders.component.scss']\n})\nexport class AllOrdersComponent implements OnInit {\n  constructor(\n\t\tprivate orderService: OrderService,\n\t\tprivate customerService: CustomerService,\n\t) {}\n\n\torders: Order[] = [];\n\n\tngOnInit() {\n\t\tthis.getOrders();\n\t}\n\n\tgetOrders() {\n\t\tthis.orderService.getOrders()\n\t\t\t.subscribe(orders => this.orders = orders, err => console.error(err), () => {\n\t\t\tthis.orders.forEach(order => {\n\t\t\t\tthis.customerService.getCustomer(order.customerId)\n\t\t\t\t\t.subscribe(customer => order.customer = customer, err => console.error(err), () => {\n\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n}\n","module.exports = \"\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZGVyL2RlbGV0ZS1vcmRlci9kZWxldGUtb3JkZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { OrderService } from '../order.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n\tselector: 'app-delete-order',\n\ttemplateUrl: './delete-order.component.html',\n\tstyleUrls: ['./delete-order.component.scss']\n})\nexport class DeleteOrderComponent implements OnInit {\n\tconstructor(\n\t\tprivate service: OrderService,\n\t\tprivate router: Router,\n\t\tprivate route: ActivatedRoute\n\t) {}\n\n\tngOnInit() {\n\t\tlet id = this.route.snapshot.params.id;\n\t\tthis.deleteOrder(id);\n\t}\n\n\tdeleteOrder(id) {\n\t\tthis.service.deleteOrder(id)\n\t\t\t.subscribe(() => {}, err => console.error(err), () => {\n\t\t\tthis.router.navigate(['/orders']);\n\t\t});\n\t}\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'enumToArray'\n})\n\nexport class EnumToArrayPipe implements PipeTransform {\n\n  transform(data: Object) {\n    const keys = Object.keys(data);\n    return keys.slice(keys.length / 2);\n  }\n\n}\n","export enum Eservice {\n    MOVING = 1,\n    PACKING = 2,\n    CLEANING = 3,\n}\n","module.exports = \"<h1 class=\\\"display-4\\\">New Order</h1>\\n\\n<hr>\\n\\n<a class=\\\"btn btn-outline-dark mb-3\\\" [routerLink]=\\\"[ '/orders' ]\\\">See all Orders</a>\\n\\n<form id=\\\"postForm\\\" name=\\\"postForm\\\" #heroForm=\\\"ngForm\\\" (ngSubmit)=\\\"postOrder()\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"addressFrom\\\">Address From</label>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"order.addressFrom\\\" name=\\\"addressFrom\\\" id=\\\"addressFrom\\\" class=\\\"form-control\\\" required>\\n    </div>\\n    \\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"addressTo\\\">Address To</label>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"order.addressTo\\\" name=\\\"addressTo\\\" id=\\\"addressTo\\\" class=\\\"form-control\\\" required>\\n    </div>\\n    \\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"dueDate\\\">Due Date</label>\\n      <input type=\\\"date\\\" [(ngModel)]=\\\"order.dueDate\\\" name=\\\"dueDate\\\" id=\\\"dueDate\\\" class=\\\"form-control\\\" required>\\n    </div>\\n    \\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"note\\\">Note</label>\\n      <textarea [(ngModel)]=\\\"order.note\\\" name=\\\"note\\\" id=\\\"note\\\" class=\\\"form-control\\\"></textarea>\\n    </div>\\n    \\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"service\\\">Service</label>\\n      <select [(ngModel)]=\\\"order.service\\\" name=\\\"service\\\" id=\\\"service\\\" class=\\\"form-control\\\" required>\\n        <option *ngFor=\\\"let item of services | enumToArray\\\" [value]=\\\"item\\\">{{item}}</option>\\n      </select>\\n    </div>\\n    \\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"customer\\\">Customer</label>\\n      <select [(ngModel)]=\\\"order.customerId\\\" name=\\\"customerId\\\" id=\\\"customerId\\\" class=\\\"form-control\\\" required>\\n        <option *ngFor=\\\"let customer of customers\\\" [value]=\\\"customer.id\\\">{{customer.name}}</option>\\n      </select>\\n    </div>\\n    \\n    <input type=\\\"submit\\\" class=\\\"btn btn-success btn-block btn-lg\\\">\\n  </form>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZGVyL25ldy1vcmRlci9uZXctb3JkZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { OrderService } from '../order.service';\nimport { Router } from '@angular/router';\nimport { Order } from '../order';\nimport { Customer } from 'src/app/customer/customer';\nimport { Eservice } from '../eservice.enum';\nimport { CustomerService } from 'src/app/customer/customer.service';\n\n@Component({\n  selector: 'app-new-order',\n  templateUrl: './new-order.component.html',\n  styleUrls: ['./new-order.component.scss']\n})\nexport class NewOrderComponent implements OnInit {\n  constructor(\n\t\tprivate orderService: OrderService, \n\t\tprivate customerService: CustomerService, \n\t\tprivate router: Router) { }\n\n\torder: Order;\n\tcustomers: Customer[] = [];\n\tservices = Eservice\n\n\tngOnInit() {\n\t\tthis.order = new Order();\n\t\tthis.customerService.getCustomers().subscribe(customers => this.customers = customers);\n\t}\n\n\tpostOrder() {\n\t\tthis.orderService.postOrder(this.order)\n\t\t\t.subscribe(() => {}, err => console.error(err), () => {\n\t\t\tthis.router.navigate(['/orders']);\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Order } from './order';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\n\nexport class OrderService {\n\t// TODO (Svein): Edit this to /api/orders before production\n\turl = 'https://localhost:5001/api/orders';\n\n\tconstructor(private http: HttpClient) { }\n\n\tgetOrders(): Observable<Order[]> {\n\t\treturn this.http.get<Order[]>(this.url);\n\t}\n\n\tgetOrder(id): Observable<Order> {\n\t\treturn this.http.get<Order>(this.url + `/${id}`);\n\t}\n\n\tpostOrder(order: Order): Observable<any> {\n\t\treturn this.http.post(this.url, order);\n\t}\n\n\tputOrder(id, order: Order): Observable<any> {\n\t\treturn this.http.put(this.url + `/${id}`, order);\n\t}\n\n\tdeleteOrder(id): Observable<any> {\n\t\treturn this.http.delete(this.url + `/${id}`);\n\t}\n}\n","import { Eservice } from './eservice.enum';\nimport { Customer } from '../customer/customer';\n\nexport class Order {\n    id: number\n    addressFrom: string\n    addressTo: string\n    dueDate: string\n    created: string\n    service: Eservice\n    note: string\n    customerId: number\n    customer: Customer\n}\n","module.exports = \"<h1 class=\\\"display-4\\\">Order Details</h1>\\n\\n<hr>\\n\\n<a class=\\\"btn btn-outline-dark mb-3\\\" [routerLink]=\\\"[ '/orders' ]\\\">See all Orders</a>\\n\\n<table class=\\\"table table-striped table-responsive-md\\\">\\n  <thead>\\n    <tr>\\n      <th>Key</th>\\n      <th>Value</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr>\\n      <td>ID</td>\\n      <td>{{order.id}}</td>\\n    </tr>\\n    <tr>\\n      <td>Service</td>\\n      <td>{{order.service}}</td>\\n    </tr>\\n    <tr>\\n      <td>Created</td>\\n      <td>{{order.created}}</td>\\n    </tr>\\n    <tr>\\n      <td>Due Date</td>\\n      <td>{{order.dueDate}}</td>\\n    </tr>\\n    <tr>\\n      <td>Address (From)</td>\\n      <td>{{order.addressFrom}}</td>\\n    </tr>\\n    <tr>\\n      <td>Address (To)</td>\\n      <td>{{order.addressTo}}</td>\\n    </tr>\\n    <tr>\\n      <td>Customer</td>\\n      <td><a [routerLink]=\\\"[ '/customers/view/', order.customer.id ]\\\">{{order.customer.name}}</a></td>\\n    </tr>\\n    <tr>\\n      <td>Notes</td>\\n      <td>{{order.note}}</td>\\n    </tr>\\n  </tbody>\\n</table>\\n\\n<a class=\\\"btn btn-warning btn-block\\\" [routerLink]=\\\"[ '/orders/update/', order.id ]\\\">Update Order Details</a>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZGVyL3NpbmdsZS1vcmRlci9zaW5nbGUtb3JkZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { OrderService } from '../order.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Order } from '../order';\nimport { CustomerService } from 'src/app/customer/customer.service';\n\n@Component({\n  selector: 'app-single-order',\n  templateUrl: './single-order.component.html',\n  styleUrls: ['./single-order.component.scss']\n})\nexport class SingleOrderComponent implements OnInit {\n  constructor(\n    private orderService: OrderService, \n    private customerService: CustomerService, \n    private route: ActivatedRoute,\n    ) {}\n\n  order: Order;\n\n  ngOnInit() {\n    let id = this.route.snapshot.params.id\n    this.getOrder(id);\n  }\n\n  getOrder(id) {\n    this.orderService.getOrder(id)\n      .subscribe(order => this.order = order, err => console.error(err), () => {\n      this.getCustomer(this.order.customerId);\n    });\n  }\n\n  getCustomer(id) {\n    this.customerService.getCustomer(id)\n      .subscribe(customer => this.order.customer = customer, err => console.error(err), () => {\n\n    });\n  }\n}\n","module.exports = \"<h1 class=\\\"display-4\\\">Update Order</h1>\\n\\n<hr>\\n\\n<a class=\\\"btn btn-outline-dark mb-3\\\" [routerLink]=\\\"[ '/orders' ]\\\">See all Orders</a>\\n\\n<form id=\\\"putForm\\\" name=\\\"putForm\\\" #heroForm=\\\"ngForm\\\" (ngSubmit)=\\\"putOrder()\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"addressFrom\\\">Address From</label>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"order.addressFrom\\\" name=\\\"addressFrom\\\" id=\\\"addressFrom\\\" class=\\\"form-control\\\" [value]=\\\"order.addressFrom\\\" required>\\n    </div>\\n    \\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"addressTo\\\">Address To</label>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"order.addressTo\\\" name=\\\"addressTo\\\" id=\\\"addressTo\\\" class=\\\"form-control\\\" [value]=\\\"order.addressTo\\\" required>\\n    </div>\\n    \\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"dueDate\\\">Due Date</label>\\n      <input type=\\\"date\\\" [(ngModel)]=\\\"order.dueDate\\\" name=\\\"dueDate\\\" id=\\\"dueDate\\\" class=\\\"form-control\\\" [value]=\\\"order.dueDate\\\" required>\\n    </div>\\n    \\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"note\\\">Note</label>\\n      <textarea [(ngModel)]=\\\"order.note\\\" name=\\\"note\\\" id=\\\"note\\\" class=\\\"form-control\\\">{{order.note}}</textarea>\\n    </div>\\n    \\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"service\\\">Service</label>\\n      <select [(ngModel)]=\\\"order.service\\\" name=\\\"service\\\" id=\\\"service\\\" class=\\\"form-control\\\" required>\\n        <option *ngFor=\\\"let item of services | enumToArray\\\" [value]=\\\"item\\\" ng-selected=\\\"order.service\\\">{{item}}</option>\\n      </select>\\n    </div>\\n    \\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"customer\\\">Customer</label>\\n      <select [(ngModel)]=\\\"order.customerId\\\" name=\\\"customerId\\\" id=\\\"customerId\\\" class=\\\"form-control\\\" required>\\n        <option *ngFor=\\\"let customer of customers\\\" [value]=\\\"customer.id\\\" ng-selected=\\\"order.customerId\\\">{{customer.name}}</option>\\n      </select>\\n    </div>\\n    \\n    <input type=\\\"submit\\\" class=\\\"btn btn-success btn-block btn-lg\\\" value=\\\"Update\\\">\\n  </form>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZGVyL3VwZGF0ZS1vcmRlci91cGRhdGUtb3JkZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { OrderService } from '../order.service';\nimport { CustomerService } from 'src/app/customer/customer.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Order } from '../order';\nimport { Customer } from 'src/app/customer/customer';\nimport { Eservice } from '../eservice.enum';\n\n@Component({\n\tselector: 'app-update-order',\n\ttemplateUrl: './update-order.component.html',\n\tstyleUrls: ['./update-order.component.scss']\n})\nexport class UpdateOrderComponent implements OnInit {\n\tconstructor(\n\t\tprivate orderService: OrderService,\n\t\tprivate customerService: CustomerService,\n\t\tprivate route: ActivatedRoute,\n\t\tprivate router: Router) { }\n\n\tid: string;\n\torder: Order;\n\tcustomers: Customer[];\n\tservices = Eservice;\n\n\tngOnInit() {\n\t\tthis.id = this.route.snapshot.params.id\n\t\tthis.getOrder(this.id);\n\t\tthis.getCustomers();\n\t}\n\n\tgetOrder(id) {\n\t\tthis.orderService.getOrder(id)\n\t\t\t.subscribe(order => this.order = order, err => console.error(err), () => {\n\t\t\tthis.getCustomer(this.order.customerId);\n\t\t});\n\t}\n\n\tputOrder() {\n\t\tthis.orderService.putOrder(this.id, this.order)\n\t\t\t.subscribe(() => {}, err => console.error(err), () => {\n\t\t\tthis.router.navigate(['/orders']);\n\t\t});\n\t}\n\n\tgetCustomer(id) {\n\t\tthis.customerService.getCustomer(id)\n\t\t\t.subscribe(customer => this.order.customer = customer);\n\t}\n\n\tgetCustomers() {\n\t\tthis.customerService.getCustomers()\n\t\t\t.subscribe(customers => this.customers = customers);\n\t}\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}